name: LANCommander Launcher

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      version_semver:
        description: "Semantic Version"
        required: true
        type: string
      version_tag:
        description: 'Version Tag'
        required: true
        type: string
      build_runtime:
        description: 'Build Runtime'
        required: false
        type: string
        default: 'win-x64'
      build_arch:
        description: 'Build Architecture'
        required: false
        type: string
        default: 'x64'
      build_platform:
        description: 'Build Platform'
        required: false
        type: string
        default: 'Windows'
      build_configuration:
        description: 'Build Configuration (Debug/Release)'
        required: false
        type: string
        default: 'Release'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: frabert/replace-string-action@v2
      name: Swap Path Backslashes
      id: swap_path_backslashes
      with:
        string: '${{ github.workspace }}'
        pattern: '\\'
        replace-with: '/'
        flags: g

    # Checkout code
    - uses: actions/checkout@v3
      with:
        submodules: true

    # .NET Setup and Caching
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.102

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    # Node.js Setup and Caching
    - name: Setup Node.js
      uses: actions/setup-node@v3.8.1
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          LANCommander.UI/package-lock.json
          LANCommander.Launcher/package-lock.json

    # Parallel UI builds
    - name: Build UI Components
      run: |
        cd ./LANCommander.UI
        npm ci
        npm run package
      
    - name: Install Launcher Node Dependencies
      run: |
        cd ./LANCommander.Launcher
        npm ci

    # .NET builds
    - name: Publish Components
      run: |
        dotnet publish "./LANCommander.AutoUpdater/LANCommander.AutoUpdater.csproj" -c ${{ inputs.build_configuration }} --self-contained --runtime ${{ inputs.build_runtime }} -p:Version="${{ inputs.version_tag }}" -p:AssemblyVersion="${{ inputs.version_semver }}"
        dotnet publish "./LANCommander.Launcher/LANCommander.Launcher.csproj" -c ${{ inputs.build_configuration }} --self-contained --runtime ${{ inputs.build_runtime }} -p:Version="${{ inputs.version_tag }}" -p:AssemblyVersion="${{ inputs.version_semver }}"
        dotnet publish "./LANCommander.Launcher.CLI/LANCommander.Launcher.CLI.csproj" -c ${{ inputs.build_configuration }} --self-contained --runtime ${{ inputs.build_runtime }} -p:Version="${{ inputs.version_tag }}" -p:AssemblyVersion="${{ inputs.version_semver }}"

    - name: Bundle and Clean
      run: |
        Copy-Item -Force -Recurse -Verbose LANCommander.AutoUpdater/bin/${{ inputs.build_configuration }}/net9.0/${{ inputs.build_runtime }}/publish/* LANCommander.Launcher/bin/${{ inputs.build_configuration }}/net9.0/${{ inputs.build_runtime }}/publish/
        Copy-Item -Force -Recurse -Verbose LANCommander.Launcher.CLI/bin/${{ inputs.build_configuration }}/net9.0/${{ inputs.build_runtime }}/publish/* LANCommander.Launcher/bin/${{ inputs.build_configuration }}/net9.0/${{ inputs.build_runtime }}/publish/
        
        # Remove unnecessary files in a single operation
        $PathsToRemove = @(
          'wwwroot/_content/BootstrapBlazor.PdfReader/compat',
          'wwwroot/_content/BootstrapBlazor.PdfReader/2.*',
          'wwwroot/_content/BootstrapBlazor.PdfReader/build/pdf.sandbox.js',
          'wwwroot/_content/BootstrapBlazor.PdfReader/build/*.map',
          'wwwroot/_content/BootstrapBlazor.PdfReader/web/*.map',
          'wwwroot/_content/AntDesign/less',
          'wwwroot/_content/BlazorMonaco/lib/monaco-editor/min-maps',
          'wwwroot/Identity/lib/bootstrap',
          'LANCommander.ico',
          'LANCommanderDark.ico',
          'package-lock.json',
          'package.json',
          '*.pdb',
          'hostfxr.dll.bak',
          'Libraries/locales'
        )
        
        $BasePath = "LANCommander.Launcher/bin/${{ inputs.build_configuration }}/net9.0/${{ inputs.build_runtime }}/publish"
        foreach ($path in $PathsToRemove) {
          Remove-Item -Recurse -Force -ErrorAction Continue "$BasePath/$path"
        }

    - name: Compress Build Output
      run: |
        $compress = @{
          Path = "LANCommander.Launcher/bin/${{ inputs.build_configuration }}/net9.0/${{ inputs.build_runtime }}/publish/*"
          DestinationPath = "LANCommander.Launcher-${{ inputs.build_platform }}-${{ inputs.build_arch }}-v${{ inputs.version_tag }}.zip"
          CompressionLevel = "Fastest"
        }
        Compress-Archive @compress

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        path: LANCommander.Launcher-${{ inputs.build_platform }}-${{ inputs.build_arch }}-v${{ inputs.version_tag }}.zip
        name: LANCommander.Launcher-${{ inputs.build_platform }}-${{ inputs.build_arch }}-v${{ inputs.version_tag }}.zip