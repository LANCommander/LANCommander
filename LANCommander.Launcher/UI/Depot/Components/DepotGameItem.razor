@using LANCommander.SDK.Models
@inject SDK.Client Client
@inject DepotService DepotService
@inject LibraryService LibraryService
@inject ImportService ImportService
@inject IMessageService MessageService
@inject ILogger<DepotGame> Logger

<div class="depot-game">
    <div class="depot-game-cover" @onclick="() => OnClick.InvokeAsync(Item)">
        @if (Item.DataItem is DepotGame game)
        {
            <SafeImage Media="game.Cover">
                <div class="depot-game-default-cover">
                    <span>@Item.Name</span>
                </div>
            </SafeImage>
        }
        else
        {
            <div class="depot-game-default-cover">
                <span>@Item.Name</span>
            </div>
        }

        @if ((Item.DataItem is DepotGame game2 && !game2.InLibrary) || (Item != null && !LibraryService.IsInLibrary(Item!.Key)))
        {
            <Button class="depot-game-add-btn" Type="ButtonType.Primary" Icon="@IconType.Outline.Plus" Loading="Importing" OnClickStopPropagation="true" OnClick="AddToLibrary"/>
        }
    </div>
</div>

@code {
    [Parameter] public Models.ListItem Item { get; set; }
    [Parameter] public EventCallback<Models.ListItem> OnClick { get; set; }

    bool Importing = false;

    async Task AddToLibrary()
    {
        try
        {
            Importing = true;
            StateHasChanged();
            await Task.Yield();

            await ImportService.ImportGameAsync(Item.Key);
            await LibraryService.AddToLibraryAsync(Item.Key);
            await LibraryService.RefreshItemsAsync();

            Importing = false;
            StateHasChanged();
            await Task.Yield();

            MessageService.Success($"{Item.Name} was added to your library!");
        }
        catch (Exception ex)
        {
            Importing = false;
            StateHasChanged();
            await Task.Yield();

            Logger?.LogError(ex, $"{Item.Name} ({Item.Key}) could not be added to your library!");
            MessageService.Error($"{Item.Name} could not be added to your library!");
        }
    }
}
