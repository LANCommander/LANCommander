@page "/Login"
@using LANCommander.Server.Extensions
@using LANCommander.Server.Models
@using LANCommander.Server.Services
@using LANCommander.Server.Services.Models
@model LANCommander.Server.UI.Pages.Account.LoginModel
@{ Layout = "/UI/Views/Shared/_LayoutBasic.cshtml"; }

@{
    ViewData["Title"] = "Log in";

    var providers = HttpContext.GetExternalProviders();
}

<div class="login-container">
    <div class="ant-row">
        <div class="ant-col ant-col-xs-24 ant-col-md-12">
            <div style="text-align: center; margin-bottom: 24px;">
                @switch (SettingService.GetSettings().Theme)
                {
                    case LANCommanderTheme.Light:
                        <img src="~/static/logo.svg" />
                        break;

                    case LANCommanderTheme.Dark:
                        <img src="~/static/logo-dark.svg" />
                        break;
                }
            </div>
            
            @foreach (var error in ModelState.SelectMany(x => x.Value.Errors))
            {
                <div data-show="true" class="ant-alert ant-alert-error ant-alert-no-icon" style="margin-bottom: 16px">
                    <div class="ant-alert-content">
                        <div class="ant-alert-message">@error.ErrorMessage</div>
                    </div>
                </div> 
            }
            
            <form id="account" method="post" autocomplete="off">
                @Html.AntiForgeryToken()

                <div class="ant-form ant-form-vertical">
                    <div class="ant-form-item">
                        <div class="ant-form-item-row ant-row">
                            <div class="ant-form-item-label ant-col">
                                <label asp-for="Model.Username" class="form-label"></label>
                            </div>

                            <div class="ant-form-item-control ant-col">
                                <div class="ant-form-item-control-input">
                                    <div class="ant-form-item-control-input-content">
                                        <input asp-for="Model.Username" class="ant-input" autocomplete="username" aria-required="true"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="ant-form-item">
                        <div class="ant-form-item-row ant-row">
                            <div class="ant-form-item-label ant-col">
                                <label asp-for="Model.Password" class="form-label"></label>
                            </div>

                            <div class="ant-form-item-control ant-col">
                                <div class="ant-form-item-control-input">
                                    <div class="ant-form-item-control-input-content">
                                        <input asp-for="Model.Password" class="ant-input" autocomplete="current-password" aria-required="true"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="ant-form-item" style="margin-bottom: 0;">
                        <div class="ant-form-item-row ant-row">
                            <button id="login-submit" type="submit" class="ant-btn ant-btn-primary ant-btn-block">Sign in</button>
                        </div>
                    </div>
                </div>
            </form>

            @if (providers != null && providers.Count() > 0)
            {
                <span class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center">
                    <span class="ant-divider-inner-text">
                        Or
                    </span>
                </span>

                <div class="authentication-provider-container">
                    <div class="authentication-provider-button-group">
                        @foreach (var provider in providers)
                        {
                            <div class="authentication-provider-button">
                                <form method="post">
                                    <input type="hidden" name="Provider" value="@provider.Slug" />
                                    <input type="hidden" name="ReturnUrl" value="@Model.ReturnUrl" />

                                    <button class="ant-btn ant-btn-primary ant-btn-block" type="submit" style="@(!String.IsNullOrWhiteSpace(provider.Color) ? $"background-color: {provider.Color}; border-color: {provider.Color}" : "")">
                                        @if (!String.IsNullOrWhiteSpace(provider.Icon))
                                        {
                                            <span class="anticon" role="img">
                                                <svg focusable="false" width="1em" height="1em" fill="currentColor">
                                                    <use xlink:href="_content/LANCommander.UI/bootstrap-icons.svg#@provider.Icon"/>
                                                </svg>
                                            </span>
                                        }

                                        <span>Sign in using @provider.Name</span>
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <div class="ant-col ant-col-xs-24 ant-col-md-12">
            @(await Html.RenderComponentAsync<LANCommander.Server.UI.Pages.Account.Components.LauncherDownloadButton>(RenderMode.Server))
        </div>
    </div>
</div>

<div class="ant-row ant-row-middle ant-row-space-around" style="min-height: 100vh; margin-top: -24px;">
    <div class="ant-col ant-col-xs-24 ant-col-md-10">

        @foreach (var error in ModelState.SelectMany(x => x.Value.Errors))
        {
            <div data-show="true" class="ant-alert ant-alert-error ant-alert-no-icon" style="margin-bottom: 16px">
                <div class="ant-alert-content">
                    <div class="ant-alert-message">@error.ErrorMessage</div>
                </div>
            </div>
        }

        <div class="ant-card ant-card-bordered">
            <div class="ant-card-head">
                <div class="ant-card-head-wrapper">
                    <div class="ant-card-head-title">Login</div>

                    <div class="ant-card-extra">
                        <a href="/Launcher" class="ant-btn ant-btn-primary">
                            <span class="anticon anticon-rocket">
                                <svg focusable="false" width="1em" height="1em" fill="currentColor" style="pointer-events: none;" xmlns="http://www.w3.org/2000/svg" class="icon" viewBox="0 0 1024 1024"><path d="M864 736c0-111.6-65.4-208-160-252.9V317.3c0-15.1-5.3-29.7-15.1-41.2L536.5 95.4C530.1 87.8 521 84 512 84s-18.1 3.8-24.5 11.4L335.1 276.1a63.97 63.97 0 0 0-15.1 41.2v165.8C225.4 528 160 624.4 160 736h156.5c-2.3 7.2-3.5 15-3.5 23.8 0 22.1 7.6 43.7 21.4 60.8a97.2 97.2 0 0 0 43.1 30.6c23.1 54 75.6 88.8 134.5 88.8 29.1 0 57.3-8.6 81.4-24.8 23.6-15.8 41.9-37.9 53-64a97 97 0 0 0 43.1-30.5 97.52 97.52 0 0 0 21.4-60.8c0-8.4-1.1-16.4-3.1-23.8H864zM762.3 621.4c9.4 14.6 17 30.3 22.5 46.6H700V558.7a211.6 211.6 0 0 1 62.3 62.7zM388 483.1V318.8l124-147 124 147V668H388V483.1zM239.2 668c5.5-16.3 13.1-32 22.5-46.6 16.3-25.2 37.5-46.5 62.3-62.7V668h-84.8zm388.9 116.2c-5.2 3-11.2 4.2-17.1 3.4l-19.5-2.4-2.8 19.4c-5.4 37.9-38.4 66.5-76.7 66.5-38.3 0-71.3-28.6-76.7-66.5l-2.8-19.5-19.5 2.5a27.7 27.7 0 0 1-17.1-3.5c-8.7-5-14.1-14.3-14.1-24.4 0-10.6 5.9-19.4 14.6-23.8h231.3c8.8 4.5 14.6 13.3 14.6 23.8-.1 10.2-5.5 19.6-14.2 24.5zM464 400a48 48 0 1 0 96 0 48 48 0 1 0-96 0z"></path></svg>
                            </span>
                            Launcher
                        </a>
                    </div>
                </div>
            </div>

            <form id="account" method="post" class="ant-card-body" autocomplete="off">
                @Html.AntiForgeryToken()
                
                <div class="ant-form ant-form-vertical">
                    <div class="ant-form-item">
                        <div class="ant-form-item-row ant-row">
                            <div class="ant-form-item-label ant-col">
                                <label asp-for="Model.Username" class="form-label"></label>
                            </div>

                            <div class="ant-form-item-control ant-col">
                                <div class="ant-form-item-control-input">
                                    <div class="ant-form-item-control-input-content">
                                        <input asp-for="Model.Username" class="ant-input" autocomplete="username" aria-required="true"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="ant-form-item">
                        <div class="ant-form-item-row ant-row">
                            <div class="ant-form-item-label ant-col">
                                <label asp-for="Model.Password" class="form-label"></label>
                            </div>

                            <div class="ant-form-item-control ant-col">
                                <div class="ant-form-item-control-input">
                                    <div class="ant-form-item-control-input-content">
                                        <input asp-for="Model.Password" class="ant-input" autocomplete="current-password" aria-required="true"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="ant-form-item">
                        <div class="ant-form-item-row ant-row">
                            <div class="ant-form-item-control ant-col">
                                <div class="ant-form-item-control-input">
                                    <div class="ant-form-item-control-input-content">
                                        <label class="ant-checkbox-wrapper">
                                            <span class="ant-checkbox">
                                                <input class="ant-checkbox-input" asp-for="Model.RememberMe"/>
                                                <span class="ant-checkbox-inner"></span>
                                            </span>
                                            <span>
                                                @Html.DisplayNameFor(m => m.Model.RememberMe)
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="ant-form-item" style="margin-bottom: 0;">
                        <div class="ant-form-item-row ant-row">
                            <button id="login-submit" type="submit" class="ant-btn ant-btn-primary ant-btn-block">Sign in</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        @if (providers != null && providers.Count() > 0)
        {
            <span class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center">
                <span class="ant-divider-inner-text">
                    Or
                </span>
            </span>

            <div class="authentication-provider-container">
                <div class="authentication-provider-button-group">
                    @foreach (var provider in providers)
                    {
                        <div class="authentication-provider-button">
                            <form method="post">
                                <input type="hidden" name="Provider" value="@provider.Slug" />
                                <input type="hidden" name="ReturnUrl" value="@Model.ReturnUrl" />

                                <button class="ant-btn ant-btn-primary ant-btn-block" type="submit" style="@(!String.IsNullOrWhiteSpace(provider.Color) ? $"background-color: {provider.Color}; border-color: {provider.Color}" : "")">
                                    @if (!String.IsNullOrWhiteSpace(provider.Icon))
                                    {
                                        <span class="anticon" role="img">
                                        <svg focusable="false" width="1em" height="1em" fill="currentColor">
                                            <use xlink:href="_content/LANCommander.UI/bootstrap-icons.svg#@provider.Icon"/>
                                        </svg>
                                    </span>
                                    }

                                    <span>Sign in using @provider.Name</span>
                                </button>
                            </form>
                        </div>
                    }
                </div>
            </div>
        }

        <div style="text-align: center; margin-top: 16px;">
            Don't have account yet? <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl" tabindex="-1">Register</a>
        </div>
    </div>
</div>