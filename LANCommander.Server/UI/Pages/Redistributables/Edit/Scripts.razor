@page "/Redistributables/{id:guid}/Scripts"
@using LANCommander.SDK.Enums
@using LANCommander.Server.UI.Pages.Redistributables.Components
@attribute [Authorize(Roles = RoleService.AdministratorRoleName)]
@inject DatabaseServiceFactory DatabaseServiceFactory
@inject NavigationManager NavigationManager

<RedistributableEditView Id="Id">
    <ScriptEditor RedistributableId="Id" ArchiveId="@LatestArchiveId" AllowedTypes="new[] { ScriptType.Install, ScriptType.DetectInstall }" />
</RedistributableEditView>

@code {
        [Parameter] public Guid Id { get; set; }
        [Parameter] public string Panel { get; set; }

        Redistributable Redistributable = new();

        Guid LatestArchiveId
        {
            get
            {
                if (Redistributable != null && Redistributable.Archives != null && Redistributable.Archives.Count > 0)
                    return Redistributable.Archives.OrderByDescending(a => a.CreatedOn).FirstOrDefault().Id;
                else
                    return Guid.Empty;
            }
        }

    protected override async Task OnInitializedAsync()
    {
        using (var redistributableService = DatabaseServiceFactory.Create<RedistributableService>())
        {
            if (Id == Guid.Empty)
                NavigationManager.NavigateTo($"/Redistributables", true);
            else
                Redistributable = await redistributableService
                    .Include(r => r.Archives)
                    .GetAsync(Id);
        }
    }
}