@page "/Redistributables"
@using Microsoft.EntityFrameworkCore;
@using LANCommander.Server.UI.Pages.Redistributables.Components
@using LANCommander.Server.Data
@using System.Web
@attribute [Authorize(Roles = RoleService.AdministratorRoleName)]
@inject DatabaseServiceFactory DatabaseServiceFactory
@inject NavigationManager NavigationManager

<PageHeader Title="Redistributables" />

<DataTable
    TItem="Redistributable"
    Size="TableSize.Small"
    Responsive>
    <RightToolbar>
        <Button OnClick="() => Add()" Type="@ButtonType.Primary">Add Redistributable</Button>
    </RightToolbar>
    <Columns>
        <BoundDataColumn Property="c => c.Name" Sortable DefaultSortOrder="SortDirection.Ascending" />
        <BoundDataColumn Property="r => r.Games.Count" Title="Games" Sortable Include="Games" />
        <BoundDataColumn Property="r => r.CreatedOn" Format="MM/dd/yyyy hh:mm tt" Sortable />
        <BoundDataColumn Property="r => r.CreatedBy != null ? r.CreatedBy.UserName : String.Empty" Title="Created By" Sortable Include="CreatedBy" />
        <BoundDataColumn Property="r => r.UpdatedOn" Format="MM/dd/yyyy hh:mm tt" Sortable />
        <BoundDataColumn Property="r => r.UpdatedBy != null ? r.UpdatedBy.UserName : String.Empty" Title="Updated By" Sortable Include="UpdatedBy" />
        <DataActions>
            <a href="@($"/Redistributables/{context.Id}")" class="ant-btn ant-btn-primary">Edit</a>
            
            <Popconfirm OnConfirm="() => Delete(context)" Title="Are you sure you want to delete this redistributable?">
                <Button Type="@ButtonType.Text" Icon="@IconType.Outline.Close" Danger/>
            </Popconfirm>
        </DataActions>
    </Columns>
</DataTable>

<ImportUploadDialog @ref="ImportUploadDialog" />

 @code {
    bool Loading = true;
    
    ImportUploadDialog ImportUploadDialog;

    protected override async Task OnInitializedAsync()
    {
        Loading = false;
    }

    void Add()
    {
        NavigationManager.NavigateTo("/Redistributables/Add");
    }

    async Task Delete(Redistributable redistributable)
    {
        Loading = true;

        using (var redistributableService = DatabaseServiceFactory.Create<RedistributableService>())
        {
            await redistributableService.DeleteAsync(redistributable);
        }

        Loading = false;
    }
}
