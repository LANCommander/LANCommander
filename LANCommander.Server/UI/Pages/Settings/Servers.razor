@page "/Settings/Servers"
@using LANCommander.Server.UI.Pages.Settings.Components
@inject IMessageService MessageService
@inject ILogger<Servers> Logger
@attribute [Authorize(Roles = RoleService.AdministratorRoleName)]

<PageHeader Title="Servers">
    <PageHeaderExtra>
        <Button OnClick="Save" Type="@ButtonType.Primary">Save</Button>
    </PageHeaderExtra>
</PageHeader>

<PageContent>
    <Form Model="Settings" Layout="@FormLayout.Vertical">
        <FormItem Label="Storage Path">
            <FilePicker Root="@RootPath" EntrySelectable="x => x is FileManagerDirectory" @bind-Value="@context.Servers.StoragePath" OkText="Select Path" Title="Choose Path" OnSelected="OnPathSelected" />
        </FormItem>
    </Form>
    
    <Divider Text="Docker Hosts" />
    
    <ServerEngineEditor @bind-Values="Settings.Servers.ServerEngines" />
</PageContent>

@code {
    Settings Settings = SettingService.GetSettings();

    string RootPath = Path.GetPathRoot(Directory.GetCurrentDirectory());

    void Save()
    {
        try
        {
            var settings = SettingService.GetSettings();

            settings.Servers = Settings.Servers;
            
            SettingService.SaveSettings(settings);
            
            MessageService.Success("Settings saved!");
        }
        catch (Exception ex)
        {
            MessageService.Error("An unknown error occurred.");
            Logger.LogError(ex, "An unknown error occurred.");
        }
    }

    void OnPathSelected(string path)
    {
        var appPath = Directory.GetCurrentDirectory();

        if (path != null && path.StartsWith(appPath))
            path = path.Substring(appPath.Length).TrimStart(Path.DirectorySeparatorChar).TrimEnd(Path.DirectorySeparatorChar);

        Settings.Servers.StoragePath = path;
    }
}
