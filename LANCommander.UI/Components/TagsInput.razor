@using LANCommander.SDK.Models
@typeparam TItem where TItem : IKeyedModel

<Select 
    @ref="@Select"
    Mode="SelectMode.Multiple"
    DataSource="Entities"
    ItemValue="e => e.Id"
    ItemLabel="OptionLabelSelector"
    @bind-Values="@SelectedValues"
    EnableSearch
    EnableVirtualization>
</Select>

@code {
    [Parameter] public Func<TItem, string> OptionLabelSelector { get; set; }
    [Parameter] public IEnumerable<TItem> Entities { get; set; }

    [Parameter] public ICollection<TItem> Values { get; set; }
    [Parameter] public EventCallback<ICollection<TItem>> ValuesChanged { get; set; }

    Select<Guid, TItem> Select;

    private IEnumerable<Guid> SelectedValues
    {
        get
        {
            return Values?.Select(e => e.Id);
        }
        set
        {
            if (value != null)
            {
                Values = Entities.Where(e => value.Contains(e.Id)).ToList();

                if (ValuesChanged.HasDelegate)
                    ValuesChanged.InvokeAsync(Values);
            }
        }
    }
}
